# Generated by Django 5.0.6 on 2025-08-28 18:22

import django.core.validators
import django.db.models.deletion
import lending.models
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='LendingAIInsight',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('insights_data', models.JSONField()),
                ('risk_score', models.FloatField(default=0.0)),
                ('generated_at', models.DateTimeField(auto_now=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='lending_ai_insight', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='LendingCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('color', models.CharField(default='#3B82F6', max_length=7)),
                ('icon', models.CharField(default='handshake', max_length=50)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
                'unique_together': {('user', 'name')},
            },
        ),
        migrations.CreateModel(
            name='LendingTransaction',
            fields=[
                ('lending_id', models.CharField(default=lending.models.generate_lending_id, editable=False, max_length=25, primary_key=True, serialize=False)),
                ('display_id', models.IntegerField(default=1, editable=False)),
                ('transaction_type', models.CharField(choices=[('lend', 'Lend'), ('borrow', 'Borrow')], max_length=10)),
                ('person_name', models.CharField(max_length=100)),
                ('person_contact', models.CharField(blank=True, max_length=100)),
                ('person_email', models.EmailField(blank=True, max_length=254)),
                ('amount', models.DecimalField(decimal_places=2, max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('interest_rate', models.DecimalField(decimal_places=2, default=0, max_digits=5, validators=[django.core.validators.MinValueValidator(Decimal('0'))])),
                ('interest_type', models.CharField(choices=[('simple', 'Simple Interest'), ('compound', 'Compound Interest'), ('flat', 'Flat Rate')], default='simple', max_length=20)),
                ('category', models.CharField(default='Personal', max_length=100)),
                ('priority', models.CharField(choices=[('low', 'Low'), ('medium', 'Medium'), ('high', 'High'), ('urgent', 'Urgent')], default='medium', max_length=10)),
                ('transaction_date', models.DateField(default=lending.models.get_current_date)),
                ('due_date', models.DateField(blank=True, null=True)),
                ('date_completed', models.DateTimeField(blank=True, null=True)),
                ('status', models.CharField(choices=[('active', 'Active'), ('completed', 'Completed'), ('overdue', 'Overdue'), ('cancelled', 'Cancelled'), ('partial', 'Partially Paid')], default='active', max_length=10)),
                ('description', models.TextField(blank=True)),
                ('notes', models.TextField(blank=True)),
                ('location', models.CharField(blank=True, max_length=200)),
                ('amount_paid', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('ai_confidence', models.FloatField(default=0.0)),
                ('ai_suggestions', models.JSONField(blank=True, default=dict)),
                ('is_verified', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('custom_category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='lending.lendingcategory')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-transaction_date', '-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amount', models.DecimalField(decimal_places=2, max_digits=10)),
                ('payment_date', models.DateField(default=lending.models.get_current_date)),
                ('payment_method', models.CharField(blank=True, max_length=50)),
                ('notes', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='lending.lendingtransaction')),
            ],
            options={
                'ordering': ['-payment_date'],
            },
        ),
        migrations.CreateModel(
            name='PaymentReminder',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reminder_date', models.DateTimeField()),
                ('message', models.TextField()),
                ('reminder_type', models.CharField(choices=[('email', 'Email'), ('sms', 'SMS'), ('notification', 'In-App Notification')], default='notification', max_length=20)),
                ('is_sent', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reminders', to='lending.lendingtransaction')),
            ],
            options={
                'ordering': ['-reminder_date'],
            },
        ),
        migrations.CreateModel(
            name='LendingAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.DateField()),
                ('total_lent', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('total_borrowed', models.DecimalField(decimal_places=2, default=0, max_digits=12)),
                ('active_lends', models.IntegerField(default=0)),
                ('active_borrows', models.IntegerField(default=0)),
                ('overdue_count', models.IntegerField(default=0)),
                ('category_breakdown', models.JSONField(default=dict)),
                ('person_breakdown', models.JSONField(default=dict)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-month'],
                'unique_together': {('user', 'month')},
            },
        ),
        migrations.AddIndex(
            model_name='lendingtransaction',
            index=models.Index(fields=['user', 'transaction_date'], name='lending_len_user_id_a1d5c0_idx'),
        ),
        migrations.AddIndex(
            model_name='lendingtransaction',
            index=models.Index(fields=['user', 'status'], name='lending_len_user_id_6ac225_idx'),
        ),
        migrations.AddIndex(
            model_name='lendingtransaction',
            index=models.Index(fields=['user', 'transaction_type'], name='lending_len_user_id_971176_idx'),
        ),
    ]
