# Generated by Django 5.2.4 on 2025-08-15 04:01

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('expenses', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='expense',
            options={'ordering': ['-transaction_date', '-created_at']},
        ),
        migrations.AddField(
            model_name='expense',
            name='ai_confidence',
            field=models.FloatField(default=0.0),
        ),
        migrations.AddField(
            model_name='expense',
            name='ai_suggestions',
            field=models.JSONField(blank=True, default=dict),
        ),
        migrations.AddField(
            model_name='expense',
            name='description',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='expense',
            name='discount_amount',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
        ),
        migrations.AddField(
            model_name='expense',
            name='expense_type',
            field=models.CharField(choices=[('personal', 'Personal'), ('business', 'Business'), ('shared', 'Shared'), ('reimbursable', 'Reimbursable')], default='personal', max_length=20),
        ),
        migrations.AddField(
            model_name='expense',
            name='is_recurring',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='expense',
            name='is_verified',
            field=models.BooleanField(default=False),
        ),
        migrations.AddField(
            model_name='expense',
            name='location',
            field=models.CharField(blank=True, max_length=200, null=True),
        ),
        migrations.AddField(
            model_name='expense',
            name='next_occurrence',
            field=models.DateField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='expense',
            name='notes',
            field=models.TextField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='expense',
            name='payment_method',
            field=models.CharField(choices=[('cash', 'Cash'), ('card', 'Credit/Debit Card'), ('upi', 'UPI'), ('bank_transfer', 'Bank Transfer'), ('wallet', 'Digital Wallet'), ('other', 'Other')], default='cash', max_length=20),
        ),
        migrations.AddField(
            model_name='expense',
            name='receipt_url',
            field=models.URLField(blank=True, null=True),
        ),
        migrations.AddField(
            model_name='expense',
            name='recurring_frequency',
            field=models.CharField(blank=True, choices=[('daily', 'Daily'), ('weekly', 'Weekly'), ('monthly', 'Monthly'), ('yearly', 'Yearly')], max_length=20, null=True),
        ),
        migrations.AddField(
            model_name='expense',
            name='tax_amount',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
        ),
        migrations.AddField(
            model_name='expense',
            name='tip_amount',
            field=models.DecimalField(decimal_places=2, default=0, max_digits=10),
        ),
        migrations.AddField(
            model_name='expense',
            name='updated_at',
            field=models.DateTimeField(auto_now=True),
        ),
        migrations.CreateModel(
            name='ExpenseAnalytics',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('month', models.DateField()),
                ('total_expenses', models.DecimalField(decimal_places=2, max_digits=12)),
                ('category_breakdown', models.JSONField(default=dict)),
                ('vendor_breakdown', models.JSONField(default=dict)),
                ('daily_spending', models.JSONField(default=dict)),
                ('payment_method_breakdown', models.JSONField(default=dict)),
                ('average_per_day', models.DecimalField(decimal_places=2, max_digits=10)),
                ('highest_expense', models.DecimalField(decimal_places=2, max_digits=10)),
                ('most_frequent_category', models.CharField(max_length=100)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-month'],
            },
        ),
        migrations.CreateModel(
            name='ExpenseAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.FileField(upload_to='expense_attachments/')),
                ('filename', models.CharField(max_length=255)),
                ('file_type', models.CharField(max_length=50)),
                ('file_size', models.IntegerField()),
                ('uploaded_at', models.DateTimeField(auto_now_add=True)),
                ('expense', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='expenses.expense')),
            ],
        ),
        migrations.CreateModel(
            name='ExpenseCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('color', models.CharField(default='#3B82F6', max_length=7)),
                ('icon', models.CharField(default='circle', max_length=50)),
                ('budget_limit', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='expense',
            name='custom_category',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='expenses.expensecategory'),
        ),
        migrations.CreateModel(
            name='ExpenseTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('color', models.CharField(default='#6B7280', max_length=7)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.AddField(
            model_name='expense',
            name='tags',
            field=models.ManyToManyField(blank=True, to='expenses.expensetag'),
        ),
        migrations.AddIndex(
            model_name='expense',
            index=models.Index(fields=['user', 'transaction_date'], name='expenses_ex_user_id_36ede3_idx'),
        ),
        migrations.AddIndex(
            model_name='expense',
            index=models.Index(fields=['user', 'category'], name='expenses_ex_user_id_207090_idx'),
        ),
        migrations.AddIndex(
            model_name='expense',
            index=models.Index(fields=['user', 'vendor'], name='expenses_ex_user_id_f178ec_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='expenseanalytics',
            unique_together={('user', 'month')},
        ),
        migrations.AlterUniqueTogether(
            name='expensecategory',
            unique_together={('user', 'name')},
        ),
        migrations.AlterUniqueTogether(
            name='expensetag',
            unique_together={('user', 'name')},
        ),
    ]
